plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id "scabbard.gradle"
    id 'kotlin-kapt'
    alias(libs.plugins.hilt)
}


scabbard {
    enabled = true
}

hilt {
    enableAggregatingTask = true
}
allprojects {
      configurations.all {
        resolutionStrategy.eachDependency {
            if (requested.group == "com.github.kittinunf.result" && requested.name == "result" && requested.version == "3.0.0") {
                useVersion("3.0.1")
                because("Transitive dependency of Scabbard, currently not available on mavenCentral()")
            }
        }
    }
}

android {
    namespace 'com.example.weatherapplication'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.weatherapplication"
        minSdk 34
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // Get the API keys from local.properties
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        // Set API keys in BuildConfig
        buildConfigField "String", "API_KEY", "\"${properties.getProperty('API_KEY')}\""

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.0"
    }
    buildFeatures {
        viewBinding true
        buildConfig true
        compose true
    }
    kapt {
        correctErrorTypes true
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.foundation.android
    implementation libs.androidx.material3.android
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    //compose
    implementation libs.androidx.ui
    implementation libs.androidx.material
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.activity.compose

    implementation libs.androidx.material.icons.core
    implementation libs.androidx.material.icons.extended
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.navigation.compose
    implementation libs.androidx.constraintlayout.compose

    implementation libs.androidx.lifecycle.viewmodel.compose.v241
    implementation libs.androidx.navigation.compose.v242
    implementation libs.androidx.lifecycle.runtime.ktx
    debugImplementation libs.androidx.ui.tooling

    //Hilt - DI
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose
    // Coil
    implementation libs.coil
    implementation libs.accompanist.coil
    implementation libs.coil.compose
    implementation libs.coil.compose.base
    //implementation(libs.google.dagger.hilt)
    // kapt(libs.google.dagger.hilt.compiler)

    //Logging
    implementation libs.timber

    //  Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    //Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.logging.interceptor
    implementation libs.gson

}